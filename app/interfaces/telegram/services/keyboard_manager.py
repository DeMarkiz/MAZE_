from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.infrastructure.database.models.subscribe import SubscriptionPlanModel, PlanName


class KeyboardManager:
    @staticmethod
    async def get_subscription_keyboard() -> InlineKeyboardMarkup:
        plans = await SubscriptionPlanModel.filter(is_active=True).all()
        keyboard = [
            [InlineKeyboardButton(
                text=(f"‚≠êÔ∏è {plan.name.value.upper()} - ${plan.price_usd}" if plan.name == PlanName.PRO else f"üëë {plan.name.value.upper()} - ${plan.price_usd}"),
                callback_data=f"choose_plan:{plan.name.value}"
            )] for plan in plans
        ]
        keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_lk")])
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def get_upsell_keyboard(offer: dict, callback_data: str) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=offer["button"], callback_data=callback_data)]])

    @staticmethod
    def get_lk_inline_keyboard() -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="üì± –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="open_lk")]]
        )

    @staticmethod
    def get_admin_panel_keyboard() -> InlineKeyboardMarkup:
        keyboard = [
            [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—ã", callback_data="admin_change_prices")],
            [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="admin_add_subscription")],
            [InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="admin_remove_subscription")],
            [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="admin_search_user")],
            [InlineKeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", callback_data="admin_manage_user")],
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)