from typing import Any
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.infrastructure.database.models.user import UserModel
from app.infrastructure.services.youmoney import create_payment
from app.infrastructure.logging.setup_logger import logger
from fastapi import HTTPException


class PaymentUseCase:
    async def send_payment_link(self, update: Any, context: Any, plan_name: str) -> None:
        chat_id = update.effective_chat.id
        message = getattr(update, 'message', None) or update.callback_query.message

        user = await UserModel.get_or_none(telegram_id=chat_id)
        if not user:
            await message.reply_text("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        plan_id = None
        if plan_name == "pro":
            plan_id = 1
        elif plan_name == "vip":
            plan_id = 2
        if not plan_id:
            await message.reply_text("–¢–∞–∫–æ–π –ø–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        try:
            label, payment_url, amount_rub = await create_payment(plan_id, user.telegram_id)
            context.user_data["last_payment_label"] = label
            keyboard = [[InlineKeyboardButton(text=f"üíé –û–ø–ª–∞—Ç–∏—Ç—å {plan_name.upper()} ({amount_rub}‚ÇΩ)", url=payment_url)]]
            reply_markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
            await message.reply_text(
                f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞–Ω—É {plan_name.upper()}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ {amount_rub}‚ÇΩ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.",
                reply_markup=reply_markup,
            )
            await message.reply_text(
                "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø. –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É.",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[[InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"check_payment:{label}")]]
                )
            )
        except HTTPException as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ –æ–ø–ª–∞—Ç—ã: {e.detail}")
            await message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        except Exception as e:
            logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É: {e}")
            await message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.")